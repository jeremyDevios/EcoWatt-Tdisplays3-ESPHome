esphome:
  name: lilygos3-ecowatt
  friendly_name: LiLyGoS3-EcoWatt
  platformio_options:
    board_upload.flash_size: 16MB
    board_upload.maximum_ram_size: 327680
    board_upload.maximum_size: 16777216
    board_build.partitions: "../../../custom_partitions.csv"
    
external_components:
  - source: github://landonr/lilygo-tdisplays3-esphome
    components: [tdisplays3]

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  framework:
    type: arduino

# Enable logging
logger:
  level: INFO

  
api:
  encryption:
    key: "e4AThsYUhxovYZmc6yat6NZuI/8JIgbUdz8glH5z+wU="

ota:
  password: "5320cd818066e2aa7c12c485bfac33c3"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password


time:
  - platform: homeassistant
    id: ha_time

output:
  - platform: ledc
    pin: GPIO38
    id: gpio38
    frequency: 2000

light:
  - platform: monochromatic
    output: gpio38
    name: "Backlight"
    restore_mode: RESTORE_DEFAULT_ON

# You can either setup the backlight as a switch like below or make it dimmable using a light output like above
# switch:
#   - platform: gpio
#     pin: GPIO38
#     name: "Backlight"
#     id: backlight
#     internal: true
#     restore_mode: RESTORE_DEFAULT_ON


animation:
  - file: "gif_dark/hot.gif"
    id: hot
    resize: 100x100
    type: RGB565
  - file: "gif_dark/very_hot.gif"
    id: very_hot
    resize: 100x100
    type: RGB565
  - file: "gif_dark/weary.gif"
    id: start_hot
    resize: 100x100
    type: RGB565
  - file: "gif_dark/money.gif"
    id: money
    resize: 100x100
    type: RGB565
  - file: "gif_dark/sunglass.gif"
    id: sunglass
    resize: 100x100
    type: RGB565
  - file: "gif_dark/happy.gif"
    id: happy
    resize: 100x100
    type: RGB565
  - file: "gif_dark/relieved.gif"
    id: neutral
    resize: 100x100
    type: RGB565
  - file: "gif_dark/solar-panel.png"
    id: solar_panel
    type: RGB24
  - file: "gif_dark/cloud-mining.png"
    id: bitcoin
    type: RGB24
  - file: "gif_dark/tower.png"
    id: electric_tower
    type: RGB24
    
switch:
  - platform: gpio
    pin: GPIO38
    name: "Backlight"
    id: backlight
    internal: true
    restore_mode: RESTORE_DEFAULT_ON

sensor:
  - platform: homeassistant
    name: "Consommation Power"
    id: consumption_power
    entity_id: sensor.shelly_channel_1_power

  - platform: homeassistant
    name: "Sunology Power"
    id: sun_power
    entity_id: sensor.shelly_sunpower_channel_1_power

  - platform: homeassistant
    name: "Puissance Pompe Chaleur"
    id: heat_pump_power
    entity_id: sensor.shelly_channel_2_power
  
  - platform: homeassistant
    name: "Pompe Piscine Power"
    id: swimming_pool_pump_power
    entity_id: sensor.pompe_piscine_power
    
  - platform: homeassistant
    name: "Mining Monitor Power"
    id: mining_power
    entity_id: sensor.mining_monitor_power

  - platform: homeassistant
    name: "Energy_cost"
    id: cost
    entity_id: input_number.energy_cost

  - platform: homeassistant
    name: "Beam Solar Power"
    id: beam_power
    entity_id: sensor.smart_switch_23052956369568510d0748e1e9c82cd3_power

  - platform: homeassistant
    name: "Total Solar Power"
    id: total_sun_power
    entity_id: sensor.solar_panels
    

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      inverted: true
      mode:
        input: true
        pullup: true
    name: "short press button0"
    id: tdisplay_button_0
    on_click:
      min_length: 1ms
      max_length: 1000ms
      then:
        - display.page.show_previous: disp
        - component.update: disp


text_sensor:
  - platform: wifi_info
    ip_address:
      name: ESP IP Address
    ssid:
      name: ESP Connected SSID
    bssid:
      name: ESP Connected BSSID
    mac_address:
      name: ESP Mac Wifi Address
    scan_results:
      name: ESP Latest Scan Results


font:
  - file:
      type: gfonts
      family: Nunito Sans
      weight: 600
    id: nunito_25
    size: 25
  - file:
      type: gfonts
      family: Nunito Sans
      weight: 600
    id: nunito_15
    size: 15
  - file:
      type: gfonts
      family: Nunito Sans
      weight: 600
    id: nunito_12
    size: 12
  - file:
      type: gfonts
      family: Nunito Sans
      weight: 600
    id: nunito_10
    size: 10
  - file:
      type: gfonts
      family: Nunito Sans
      weight: 600
    id: nunito_8
    size: 8
  - file:
      type: gfonts
      family: Nunito Sans
      weight: 600
    id: nunito_9
    size: 9

color:
  - id: RED
    red: 100%
    green: 33%
    blue: 33%
  - id: RED2
    red: 95%
    green: 34%
    blue: 0%
  - id: BLUE
    red: 0%
    green: 0%
    blue: 100%
  - id: WHITE
    red: 100%
    green: 100%
    blue: 100%
  - id: GREEN
    red: 35%
    green: 100%
    blue: 64%
  - id: BLACK
    red: 0%
    green: 0%
    blue: 0%

display:
  - platform: tdisplays3
    id: disp
    update_interval: 0.001s
    rotation: 0
    pages:
      - id: energy_dashboard
        lambda: |-
          it.print(51,  7, id(nunito_12), WHITE, TextAlign::LEFT, "PUISSANCE");
          it.print(55,  19, id(nunito_12), WHITE, TextAlign::LEFT, "ACTUELLE");
          it.print(51,  80, id(nunito_12), WHITE, TextAlign::LEFT, "PUISSANCE");
          it.print(60,  95, id(nunito_12), WHITE, TextAlign::LEFT, "SOLAIRE");
          it.print(26,  148, id(nunito_8), WHITE, TextAlign::LEFT, "SUNOLOGY");
          it.print(110,  148, id(nunito_8), WHITE, TextAlign::LEFT, "BEAM");

          it.rectangle(10, 176, 50, 40, WHITE);
          it.rectangle(60, 176, 50, 40, WHITE);
          it.rectangle(110, 176, 50, 40, WHITE);

          it.printf(18,  180, id(nunito_9), GREEN, TextAlign::LEFT, "PISCINE");
          it.printf(74,  180, id(nunito_9), GREEN, TextAlign::LEFT, "CLIM");
          it.printf(118,  180, id(nunito_9), GREEN, TextAlign::LEFT, "MINING");
          
          float heatPumpPower = id(heat_pump_power).state;
          float swimPumpPower = id(swimming_pool_pump_power).state;
          float miningPower = id(mining_power).state;

          

          if (swimPumpPower > 4.0) {
            it.printf(21,  200, id(nunito_9), GREEN, "%.0f W", id(swimming_pool_pump_power).state);
          }
          else {
            it.printf(21,  200, id(nunito_9), WHITE, "%.0f W", id(swimming_pool_pump_power).state);
          }
          
          if (heatPumpPower > 4.0) {
            it.printf(68,  200, id(nunito_9), GREEN, "%.0f W", id(heat_pump_power).state);
          }
          else {
            it.printf(68,  200, id(nunito_9), WHITE, "%.0f W", id(heat_pump_power).state);
          }

          if (miningPower > 4.0) {
            it.printf(120,  200, id(nunito_9), GREEN, "%.0f W", id(mining_power).state);
          }
          else {
            it.printf(120,  200, id(nunito_9), WHITE, "%.0f W", id(mining_power).state);
          }

          
          float cons = id(consumption_power).state;
          
          
          if (cons < 0.0) {
            if (id(mining_power).has_state()) {
              float mining = id(mining_power).state;
              if (mining > 15.0) {
                it.image(35, 218, id(money), COLOR_ON, COLOR_OFF);
                id(money).next_frame();
              }
              else {
                if (cons < -600.0) {
                  it.image(35, 218, id(sunglass), COLOR_ON, COLOR_OFF);
                  id(sunglass).next_frame();
                }
                else {
                  it.image(35, 218, id(happy), COLOR_ON, COLOR_OFF);
                  id(happy).next_frame();
                }
              }
            }
            else {
              it.image(35, 218, id(sunglass), COLOR_ON, COLOR_OFF);
                id(sunglass).next_frame();
            }
            it.printf(42,  36, id(nunito_25), GREEN, "%.0f W", id(consumption_power).state);
          }
          else {
            if (cons < 200.0) {
              it.image(35, 218, id(neutral), COLOR_ON, COLOR_OFF);
              id(neutral).next_frame();
              it.printf(42,  36, id(nunito_25), RED2, "%.0f W", id(consumption_power).state);
            }
            else {
              it.printf(42,  36, id(nunito_25), RED, "%.0f W", id(consumption_power).state);
              if (cons < 1000.0) {
                it.image(35, 218, id(start_hot), COLOR_ON, COLOR_OFF);
                id(start_hot).next_frame();
              }
              else {
                if (cons < 1900.0) {
                  it.image(35, 218, id(hot), COLOR_ON, COLOR_OFF);
                  id(hot).next_frame();
                }
                else {
                  it.image(35, 218, id(very_hot), COLOR_ON, COLOR_OFF);
                  id(very_hot).next_frame();
                }
              }
            }
          }
          
          float sunpower = id(total_sun_power).state;
          if (sunpower > 4.0) {
              if (sunpower > 600.0) {
                it.printf(36,  109, id(nunito_25), GREEN, "%.1f W", id(total_sun_power).state);
              }
              else {
                it.printf(36,  109, id(nunito_25), WHITE, "%.1f W", id(total_sun_power).state);
              }
          }
          else {
            it.printf(36,  109, id(nunito_25), RED2, "%.1f W", id(total_sun_power).state);
          }

          it.printf(25,  156, id(nunito_15), WHITE, "%.1f W", id(sun_power).state);
          it.printf(98,  156, id(nunito_15), WHITE, "%.1f W", id(beam_power).state);

      - id: other_dashboard
        lambda: |-
          it.print(50,  22, id(nunito_12), WHITE, TextAlign::LEFT, "HELLO");